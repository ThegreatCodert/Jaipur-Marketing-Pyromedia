imports:
    - 
        resource: parameters.yml
    - 
        resource: security.yml
    - 
        resource: services.yml
parameters:
    locale: en
framework:
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: null
    form: null
    csrf_protection: null
    validation:
        enable_annotations: true
    templating:
        engines:
            - twig
    default_locale: '%locale%'
    trusted_hosts: null
    trusted_proxies: null
    session:
        handler_id: null
    fragments: null
    http_method_override: true
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        instagram_client_id: '%instagram.client.id%'
        instagram_client_secret: '%instagram.client.secret%'
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database.host%'
        port: '%database.port%'
        dbname: '%database.name%'
        user: '%database.user%'
        password: '%database.password%'
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            SonataNotificationBundle: ~
swiftmailer:
    transport: '%mailer.transport%'
    host: '%mailer.host%'
    port: '%mailer.port%'
    username: '%mailer.user%'
    password: '%mailer.password%'
    spool:
        type: memory
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: "AppBundle\\Entity\\User"
hwi_oauth:
    connect:
        account_connector: my_user_provider
    firewall_names: [main]
    resource_owners:
        instagram:
            type: instagram
            client_id: '%instagram.client.id%'
            client_secret: '%instagram.client.secret%'
            scope: basic follower_list
            options:
                csrf: true
    fosub:
        username_iterations: 30
        properties:
            instagram: instagramId
    http_client:
        verify_peer: false
        
fos_message:
    db_driver: orm
    thread_class: AppBundle\Entity\Thread
    message_class: AppBundle\Entity\Message

sonata_notification:
    admin:
      enabled: false
    backend: sonata.notification.backend.rabbitmq
    backends:
            rabbitmq:
                exchange:     router
                connection:
                    host: localhost
                    port: 5672
                    user: guest
                    pass: guest
                    vhost: lookmarkd
    queues:
            - { queue: asyncstats, routing_key: asyncstats.fetcher, default: true }